{"version":3,"sources":["services/persons.js","components/Person.js","components/Contacts.js","components/Search.js","components/AddForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","response","data","create","newContact","post","edit","id","put","remove","delete","Person","handleDelete","name","number","onClick","Contacts","contacts","searchTerm","filter","person","toLowerCase","includes","map","Search","onChange","value","AddForm","newName","newNumber","handleSubmit","handleNameChange","handleNumberChange","onSubmit","type","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchTerm","setMessage","useEffect","values","event","target","preventDefault","some","oldContact","window","confirm","contact","setTimeout","catch","error","console","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc10c2f6.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/persons'\r\n// const baseUrl = 'http://localhost:3001/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst create = newContact => {\r\n  const request = axios.post(baseUrl, newContact);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst edit = (id, newContact) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newContact);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst personService = { getAll, create, edit, remove };\r\n\r\nexport default personService;","import React from 'react';\r\n\r\nconst Person = ({ data, handleDelete }) => (\r\n\t<p>{data.name} / {data.number} / <button onClick={() => handleDelete(data.id)}>Delete</button></p>\r\n);\r\n\r\nexport default Person;\r\n","import React from 'react';\r\nimport Person from './Person';\r\n\r\nconst Contacts = ({ contacts, searchTerm, handleDelete }) => (\r\n\t<>\r\n\t\t{contacts.filter(person => person.name.toLowerCase().includes(searchTerm.toLowerCase())).map(person => (\r\n\t\t\t<Person key={person.name} data={person} handleDelete={handleDelete} /> \r\n\t\t))}\r\n\t</>\r\n);\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\n\r\nconst Search = ({ searchTerm, onChange }) => (\r\n\t<div>\r\n\t\tSearch: <input value={searchTerm} onChange={onChange} />\r\n\t</div>\r\n);\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nconst AddForm = ({ newName, newNumber,handleSubmit, handleNameChange, handleNumberChange }) => (\r\n\t<form onSubmit={handleSubmit}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange={handleNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">Add</button>\r\n        </div>\r\n    </form>\r\n);\r\n\r\nexport default AddForm;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n\t\r\n\tif (message === null) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"message\">\r\n\t\t\t<h3>{message}</h3>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\n\nimport personService from './services/persons';\n\nimport Contacts from './components/Contacts';\nimport Search from './components/Search';\nimport AddForm from './components/AddForm';\nimport Notification from './components/Notification';\n\nconst App = () => {\n\n  const [ persons, setPersons] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ searchTerm, setSearchTerm ] = useState('');\n  const [ message, setMessage ] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then(values => {\n      setPersons(values)\n    });\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const newContact = {\n      name: newName,\n      number: newNumber,\n    }\n\n    const nameExists = persons.some(person => person.name === newName);\n   \n    if (nameExists) {\n\n      const oldContact = persons.filter(person => person.name === newName);\n      // console.log(oldContact);\n\n      if (window.confirm(`${newName} already exists in your phonebook. Want to update their number?`)) {\n        return personService.edit(oldContact[0].id, newContact)\n          .then(contact => {\n            setMessage(`Changed number of ${contact.name}!`);\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000);\n            personService.getAll().then(values => {\n              setPersons(values)\n            });          \n          })\n          .catch(error => {\n            setMessage(`Information of the person you tried to edit has already been removed from the server!`);\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000);\n            console.error('ERROR', error);\n          })\n      }\n    }\n\n    // Send data to server.\n    personService\n      .create(newContact)\n      .then(contact => {\n        setPersons(persons.concat(contact));\n        setMessage(`Added ${contact.name}!`);\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000);\n      })\n      .catch(error => {\n        // console.log( error.response.data.error );\n        setMessage(`${error.response.data.error}`);\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000);\n      });\n  }\n\n  const handleNameChange = (event) => {\n    // console.log(event.target.value);\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleSearchTermChange = (event) => {\n    setSearchTerm(event.target.value);\n  }\n\n  const handleDelete = (id) => {\n    if (window.confirm('Are you sure?')) {\n      personService.remove(id).then((contact) => {\n        setMessage(`Deleted a contact!`);\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000);        \n        personService.getAll().then(values => {\n          setPersons(values)\n        });\n      });\n\n    }\n  }\n\n  return (\n    <div>\n\n      <Notification message={message} />\n\n      <h2>Phonebook</h2>\n      <Search searchTerm={searchTerm} onChange={handleSearchTermChange} />\n\n      <h2>Add new contact</h2>\n      <AddForm newNumber={newNumber} newName={newName} handleSubmit={handleSubmit} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n\n      <h2>Numbers</h2>\n      <Contacts contacts={persons} searchTerm={searchTerm} handleDelete={handleDelete} />\n\n    </div>\n  )\n\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}